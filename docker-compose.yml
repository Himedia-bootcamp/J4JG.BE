version: '3.8'

services:
  mysql-master:
    image: mysql:8.0
    container_name: mysql-master
    ports:
      - "${MYSQL_MASTER_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_REPLICATION_USER: ${MYSQL_REPLICATION_USER}
      MYSQL_REPLICATION_PASSWORD: ${MYSQL_REPLICATION_PASSWORD}
    volumes:
      - master_data:/var/lib/mysql
      - ./init/setup_master.sh:/docker-entrypoint-initdb.d/setup_master.sh
    command: >
      --server-id=1
      --log-bin=mysql-bin
      --binlog-do-db=${MYSQL_DATABASE}
      --bind-address=0.0.0.0
    networks:
      - mysql_cluster

  mysql-slave:
    image: mysql:8.0
    container_name: mysql-slave
    ports:
      - "${MYSQL_SLAVE_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_REPLICATION_USER: ${MYSQL_REPLICATION_USER}
      MYSQL_REPLICATION_PASSWORD: ${MYSQL_REPLICATION_PASSWORD}
    volumes:
      - slave_data:/var/lib/mysql
      - ./init/setup_slave.sh:/docker-entrypoint-initdb.d/setup_slave.sh
    depends_on:
      - mysql-master
    command: >
      --server-id=2
      --relay-log=relay-log
      --log-bin=mysql-bin
      --read-only=1
      --bind-address=0.0.0.0
    networks:
      - mysql_cluster

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - mysql_cluster

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5001:5001"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-master:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_REDIS_HOST: ${REDIS_HOST}
      SPRING_REDIS_PORT: ${REDIS_PORT}
    networks:
      - mysql_cluster
    depends_on:
      - mysql-master
      - redis

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8000:8000"
    environment:
      SPRING_REDIS_HOST: ${REDIS_HOST}
      SPRING_REDIS_PORT: ${REDIS_PORT}
    networks:
      - mysql_cluster
    depends_on:
      - backend
      - redis

volumes:
  master_data:
  slave_data:

networks:
  mysql_cluster:
    driver: bridge
