name: J4JG_BE Gateway

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  build:
    name: Build Gateway
    runs-on: ubuntu-latest

    services:
      mysql-master:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_REPLICATION_USER: ${{ secrets.MYSQL_REPLICATION_USER }}
          MYSQL_REPLICATION_PASSWORD: ${{ secrets.MYSQL_REPLICATION_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      mysql-slave:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_REPLICATION_USER: ${{ secrets.MYSQL_REPLICATION_USER }}
          MYSQL_REPLICATION_PASSWORD: ${{ secrets.MYSQL_REPLICATION_PASSWORD }}
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
        env:
          discovery.type: single-node
        ports:
          - 9200:9200
        options: >-
          --health-cmd="curl -s http://localhost:9200/_cluster/health | grep '\"status\":\"green\"'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up environment variables
        run: |
          echo MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} >> .env
          echo MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} >> .env
          echo MYSQL_USER=${{ secrets.MYSQL_USER }} >> .env
          echo MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} >> .env
          echo MYSQL_REPLICATION_USER=${{ secrets.MYSQL_REPLICATION_USER }} >> .env
          echo MYSQL_REPLICATION_PASSWORD=${{ secrets.MYSQL_REPLICATION_PASSWORD }} >> .env
          echo REDIS_HOST=${{ secrets.REDIS_HOST }} >> .env
          echo REDIS_PORT=${{ secrets.REDIS_PORT }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo KAKAO_ID=${{ secrets.KAKAO_ID }} >> .env
          echo GOOGLE_ID=${{ secrets.GOOGLE_ID }} >> .env
          echo GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }} >> .env

      - name: Create application.yml template
        run: |
          mkdir -p gateway/src/main/resources
          cat > gateway/src/main/resources/application.yml.template <<EOL
          server:
            tomcat:
              threads:
                max: 62
                min-spare: 20
              accept-count: 20
              max-connections: 10000
            port: 8000

          spring:
            application:
              name: j4jg_gateway
            cache:
              type: redis
            zipkin:
              base-url: http://localhost:9411
              sender:
                type: web
                compression: true
              sampler:
                probability: 1.0

            main:
              web-application-type: reactive
              allow-bean-definition-overriding: true
            datasource:
              driver-class-name: com.mysql.cj.jdbc.Driver
              url: jdbc:mysql://localhost:3306/j4jg?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&autoReconnect=true&failOverReadOnly=false
              username: ${MYSQL_USER}
              password: ${MYSQL_PASSWORD}
              hikari:
                maximum-pool-size: 62
                minimum-idle: 20
                idle-timeout: 600000
                max-lifetime: 1800000
                connection-timeout: 30000
            jpa:
              hibernate:
                ddl-auto: create
              show-sql: true
              properties:
                hibernate:
                  format_sql: true
                  dialect: org.hibernate.dialect.MySQLDialect

            elasticsearch:
              uris:
                - http://localhost:9200
            jwt:
              secret: ${JWT_SECRET}
              accessTokenExpirationTime: 1800000
              refreshTokenExpirationTime: 259200000

            security:
              oauth2:
                client:
                  registration:
                    kakao:
                      client-name: kakao
                      client-id: ${KAKAO_ID}
                      redirect-uri: http://localhost:8000/login/oauth2/code/kakao
                      authorization-grant-type: authorization_code
                      client-authentication-method: client_secret_post
                      provider: kakao
                      scope:
                        - account_email
                        - phone_number

                    google:
                      client-name: google
                      client-id: ${GOOGLE_ID}
                      client-secret: ${GOOGLE_SECRET}
                      redirect-uri: http://localhost:8000/login/oauth2/code/google
                      authorization-grant-type: post
                      provider: google
                      scope:
                        - profile
                        - email

                  provider:
                    kakao:
                      authorization-uri: https://kauth.kakao.com/oauth/authorize
                      token-uri: https://kauth.kakao.com/oauth/token
                      user-info-uri: https://kapi.kakao.com/v2/user/me
                      user-name-attribute: id

                    google:
                      authorization-uri: https://accounts.google.com/o/oauth2/auth
                      token-uri: https://oauth2.googleapis.com/token
                      user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
                      user-name-attribute: sub

            data:
              redis:
                host: ${REDIS_HOST}
                port: ${REDIS_PORT}

          datasource:
            master:
              url: jdbc:mysql://localhost:3306/j4jg?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&autoReconnect=true&failOverReadOnly=false
              username: ${MYSQL_USER}
              password: ${MYSQL_PASSWORD}
            slave:
              url: jdbc:mysql://localhost:3307/j4jg?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&autoReconnect=true&failOverReadOnly=false
              username: ${MYSQL_USER}
              password: ${MYSQL_PASSWORD}

          routing:
            datasource:
              default-target-datasource: master
              target-datasources:
                slave: slave

          aws:
            access-key: ${{ secrets.AWS_ACCESS_KEY }}
            secret-key: ${{ secrets.AWS_SECRET_KEY }}
            region: ap-northeast-2

          logging:
            level:
              org.springframework.cloud.gateway: DEBUG
              org.springframework.security: DEBUG
          EOL

      - name: Configure application.yml
        run: |
          envsubst < gateway/src/main/resources/application.yml.template > gateway/src/main/resources/application.yml
          cat gateway/src/main/resources/application.yml
        env:
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}

      - name: Build with Gradle
        run: ./gradlew :gateway:clean :gateway:build

      - name: Run tests
        run: ./gradlew :gateway:test
