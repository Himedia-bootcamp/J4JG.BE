name: Deploy Gateway to Elastic Beanstalk

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때마다 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'  # Java 배포판 설정

      - name: Build with Gradle
        run: ./gradlew build -p gateway  # gateway 디렉토리에서 빌드
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          ELASTICSEARCH_URIS: ${{ secrets.ELASTICSEARCH_URIS }}
          OAUTH2_CLIENT_KAKAO_CLIENT_ID: ${{ secrets.OAUTH2_CLIENT_KAKAO_CLIENT_ID }}
          OAUTH2_CLIENT_KAKAO_CLIENT_SECRET: ${{ secrets.OAUTH2_CLIENT_KAKAO_CLIENT_SECRET }}
          OAUTH2_CLIENT_KAKAO_REDIRECT_URI: ${{ secrets.OAUTH2_CLIENT_KAKAO_REDIRECT_URI }}
          OAUTH2_CLIENT_GOOGLE_CLIENT_ID: ${{ secrets.OAUTH2_CLIENT_GOOGLE_CLIENT_ID }}
          OAUTH2_CLIENT_GOOGLE_CLIENT_SECRET: ${{ secrets.OAUTH2_CLIENT_GOOGLE_CLIENT_SECRET }}
          OAUTH2_CLIENT_GOOGLE_REDIRECT_URI: ${{ secrets.OAUTH2_CLIENT_GOOGLE_REDIRECT_URI }}
          SPRING_REDIS_HOST: ${{ secrets.SPRING_REDIS_HOST }}
          SPRING_REDIS_PORT: ${{ secrets.SPRING_REDIS_PORT }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AES_SECRET_KEY: ${{ secrets.AES_SECRET_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ACCESS_TOKEN_EXPIRATION_TIME: ${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION_TIME }}
          JWT_REFRESH_TOKEN_EXPIRATION_TIME: ${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION_TIME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Zip artifact
        run: zip -r gateway.zip gateway/build/libs/*.jar  # 빌드된 JAR 파일을 zip으로 압축

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          application_name: 'J4jggateway'
          environment_name: 'J4jggateway-env'
          version_label: ${{ github.run_id }}
          deployment_package: gateway.zip
          region: ${{ secrets.AWS_REGION }}
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}  # Access Key
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}  # Secret Key
